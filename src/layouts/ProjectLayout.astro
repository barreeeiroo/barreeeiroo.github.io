---
import Layout from './Layout.astro';
import { Icon } from 'astro-icon/components';

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<Layout title={title} description={description}>
  <!-- Back Button Section -->
  <section class="py-8 md:py-12 px-6 md:px-12">
    <div class="max-w-6xl mx-auto">
      <a
        href="/projects"
        class="back-link relative inline-flex items-center gap-2 text-primary hover:text-white transition-colors text-sm uppercase tracking-wider font-bold"
      >
        <Icon name="carbon:arrow-left" class="w-4 h-4" />
        Back to Featured Projects
      </a>
    </div>
  </section>

  <!-- Project Hero Section -->
  <section class="py-8 md:py-12 px-6 md:px-12">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-4xl md:text-6xl font-black text-white uppercase tracking-tight mb-6">
        {title}
      </h1>
      <div class="border-l-2 md:border-l-4 border-primary pl-4 md:pl-6 mb-8">
        <p class="text-lg md:text-xl text-gray-light max-w-3xl">
          {description}
        </p>
      </div>
    </div>
  </section>

  <!-- Project Content -->
  <slot />
</Layout>

<script>
  import { accessibleAnimate, getAnimationDelay } from '../utils/motion';

  document.addEventListener('DOMContentLoaded', () => {
    // Animate hero elements immediately
    const backLink = document.querySelector('.back-link');
    if (backLink) {
      accessibleAnimate(
        backLink,
        { opacity: [0, 1], x: [-20, 0] },
        { duration: 0.5, easing: 'ease-out' }
      );
    }

    const heroTitle = document.querySelector('h1');
    if (heroTitle) {
      accessibleAnimate(
        heroTitle,
        { opacity: [0, 1], y: [-30, 0] },
        { duration: 0.6, delay: getAnimationDelay(0.1), easing: 'ease-out' }
      );
    }

    const heroDescription = document.querySelector('h1 + div');
    if (heroDescription) {
      accessibleAnimate(
        heroDescription,
        { opacity: [0, 1], x: [20, 0] },
        { duration: 0.5, delay: getAnimationDelay(0.25), easing: 'ease-out' }
      );
    }
  });
</script>

<style>
  .back-link::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-primary);
    transition: width 0.3s ease;
  }

  .back-link:hover::after {
    width: 100%;
  }

  /* Initial state for animated elements */
  .back-link,
  h1,
  h1 + div {
    opacity: 0;
  }
</style>
